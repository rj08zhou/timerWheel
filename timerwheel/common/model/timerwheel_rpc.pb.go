// Code generated by protoc-gen-go. DO NOT EDIT.
// source: timerwheel_rpc.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DelayTaskModel struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Delay                int32    `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	Circle               int32    `protobuf:"varint,3,opt,name=circle,proto3" json:"circle,omitempty"`
	MonitorRule          string   `protobuf:"bytes,4,opt,name=monitorRule,proto3" json:"monitorRule,omitempty"`
	ProcessTime          int64    `protobuf:"varint,5,opt,name=processTime,proto3" json:"processTime,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ExpiredTime          int64    `protobuf:"varint,7,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelayTaskModel) Reset()         { *m = DelayTaskModel{} }
func (m *DelayTaskModel) String() string { return proto.CompactTextString(m) }
func (*DelayTaskModel) ProtoMessage()    {}
func (*DelayTaskModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_11237cad4a9f2e7a, []int{0}
}

func (m *DelayTaskModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelayTaskModel.Unmarshal(m, b)
}
func (m *DelayTaskModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelayTaskModel.Marshal(b, m, deterministic)
}
func (m *DelayTaskModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelayTaskModel.Merge(m, src)
}
func (m *DelayTaskModel) XXX_Size() int {
	return xxx_messageInfo_DelayTaskModel.Size(m)
}
func (m *DelayTaskModel) XXX_DiscardUnknown() {
	xxx_messageInfo_DelayTaskModel.DiscardUnknown(m)
}

var xxx_messageInfo_DelayTaskModel proto.InternalMessageInfo

func (m *DelayTaskModel) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DelayTaskModel) GetDelay() int32 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *DelayTaskModel) GetCircle() int32 {
	if m != nil {
		return m.Circle
	}
	return 0
}

func (m *DelayTaskModel) GetMonitorRule() string {
	if m != nil {
		return m.MonitorRule
	}
	return ""
}

func (m *DelayTaskModel) GetProcessTime() int64 {
	if m != nil {
		return m.ProcessTime
	}
	return 0
}

func (m *DelayTaskModel) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *DelayTaskModel) GetExpiredTime() int64 {
	if m != nil {
		return m.ExpiredTime
	}
	return 0
}

type AddTaskRequest struct {
	DelayTasks           []*DelayTaskModel `protobuf:"bytes,1,rep,name=delayTasks,proto3" json:"delayTasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddTaskRequest) Reset()         { *m = AddTaskRequest{} }
func (m *AddTaskRequest) String() string { return proto.CompactTextString(m) }
func (*AddTaskRequest) ProtoMessage()    {}
func (*AddTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11237cad4a9f2e7a, []int{1}
}

func (m *AddTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTaskRequest.Unmarshal(m, b)
}
func (m *AddTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTaskRequest.Marshal(b, m, deterministic)
}
func (m *AddTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTaskRequest.Merge(m, src)
}
func (m *AddTaskRequest) XXX_Size() int {
	return xxx_messageInfo_AddTaskRequest.Size(m)
}
func (m *AddTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTaskRequest proto.InternalMessageInfo

func (m *AddTaskRequest) GetDelayTasks() []*DelayTaskModel {
	if m != nil {
		return m.DelayTasks
	}
	return nil
}

type AddTaskResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTaskResponse) Reset()         { *m = AddTaskResponse{} }
func (m *AddTaskResponse) String() string { return proto.CompactTextString(m) }
func (*AddTaskResponse) ProtoMessage()    {}
func (*AddTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11237cad4a9f2e7a, []int{2}
}

func (m *AddTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTaskResponse.Unmarshal(m, b)
}
func (m *AddTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTaskResponse.Marshal(b, m, deterministic)
}
func (m *AddTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTaskResponse.Merge(m, src)
}
func (m *AddTaskResponse) XXX_Size() int {
	return xxx_messageInfo_AddTaskResponse.Size(m)
}
func (m *AddTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTaskResponse proto.InternalMessageInfo

func (m *AddTaskResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*DelayTaskModel)(nil), "rpc.DelayTaskModel")
	proto.RegisterType((*AddTaskRequest)(nil), "rpc.AddTaskRequest")
	proto.RegisterType((*AddTaskResponse)(nil), "rpc.AddTaskResponse")
}

func init() { proto.RegisterFile("timerwheel_rpc.proto", fileDescriptor_11237cad4a9f2e7a) }

var fileDescriptor_11237cad4a9f2e7a = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0xc7, 0x8d, 0x5d, 0x27, 0x3b, 0x83, 0xa9, 0xc7, 0x21, 0x41, 0xbc, 0x28, 0x05, 0xa1, 0x57,
	0xbb, 0x58, 0x9f, 0x40, 0x50, 0xf0, 0xc6, 0x9b, 0x6c, 0xe0, 0xa5, 0xd4, 0xe4, 0x80, 0x61, 0x6d,
	0x13, 0x93, 0x4e, 0xdd, 0x7b, 0xfa, 0x40, 0x92, 0xd4, 0x8f, 0xf6, 0xee, 0x9c, 0x5f, 0xce, 0xd7,
	0xff, 0x1f, 0x58, 0x76, 0xba, 0x21, 0xf7, 0xf1, 0x4a, 0x54, 0x3f, 0x3b, 0x2b, 0x57, 0xd6, 0x99,
	0xce, 0x60, 0xe2, 0xac, 0xcc, 0xbf, 0x18, 0x2c, 0xee, 0xa8, 0xae, 0x0e, 0xdb, 0xca, 0xef, 0x1e,
	0x8d, 0xa2, 0x1a, 0xcf, 0x20, 0xd9, 0xd1, 0x81, 0xb3, 0x8c, 0x15, 0x33, 0x11, 0x42, 0x5c, 0x42,
	0xaa, 0x42, 0x0d, 0x3f, 0xce, 0x58, 0x91, 0x8a, 0x3e, 0xc1, 0x4b, 0x98, 0x4a, 0xed, 0x64, 0x4d,
	0x3c, 0x89, 0xf8, 0x27, 0xc3, 0x0c, 0xe6, 0x8d, 0x69, 0x75, 0x67, 0x9c, 0xd8, 0xd7, 0xc4, 0x27,
	0x71, 0xce, 0x10, 0x85, 0x0a, 0xeb, 0x8c, 0x24, 0xef, 0xb7, 0xba, 0x21, 0x9e, 0x66, 0xac, 0x48,
	0xc4, 0x10, 0xe1, 0x35, 0xcc, 0xc2, 0xcd, 0xbe, 0xab, 0x1a, 0xcb, 0xa7, 0xf1, 0xfd, 0x1f, 0x84,
	0x7e, 0xfa, 0xb4, 0xda, 0x91, 0x8a, 0xfd, 0x27, 0x7d, 0xff, 0x00, 0xe5, 0xf7, 0xb0, 0xb8, 0x55,
	0x2a, 0x68, 0x12, 0xf4, 0xb6, 0x27, 0xdf, 0x61, 0x09, 0xa0, 0x7e, 0x75, 0x7a, 0xce, 0xb2, 0xa4,
	0x98, 0xaf, 0x2f, 0x56, 0xc1, 0x8d, 0xb1, 0x7c, 0x31, 0x28, 0xcb, 0x6f, 0xe0, 0xf4, 0x6f, 0x8c,
	0xb7, 0xa6, 0xf5, 0x84, 0x08, 0x13, 0x69, 0x14, 0x45, 0x7b, 0x52, 0x11, 0xe3, 0xf5, 0x03, 0x9c,
	0x87, 0xad, 0xee, 0x29, 0x38, 0xbc, 0x21, 0xf7, 0xae, 0x25, 0x61, 0x09, 0x93, 0x0d, 0xb5, 0x0a,
	0xfb, 0x25, 0xe3, 0x6b, 0xae, 0x96, 0x63, 0xd8, 0xcf, 0xce, 0x8f, 0x5e, 0xa6, 0xf1, 0x6b, 0xca,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xca, 0xf9, 0xc7, 0xb2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TimerWheelServiceClient is the client API for TimerWheelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimerWheelServiceClient interface {
	Send(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error)
}

type timerWheelServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTimerWheelServiceClient(cc grpc.ClientConnInterface) TimerWheelServiceClient {
	return &timerWheelServiceClient{cc}
}

func (c *timerWheelServiceClient) Send(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error) {
	out := new(AddTaskResponse)
	err := c.cc.Invoke(ctx, "/rpc.TimerWheelService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TimerWheelServiceServer is the server API for TimerWheelService service.
type TimerWheelServiceServer interface {
	Send(context.Context, *AddTaskRequest) (*AddTaskResponse, error)
}

// UnimplementedTimerWheelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTimerWheelServiceServer struct {
}

func (*UnimplementedTimerWheelServiceServer) Send(ctx context.Context, req *AddTaskRequest) (*AddTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterTimerWheelServiceServer(s *grpc.Server, srv TimerWheelServiceServer) {
	s.RegisterService(&_TimerWheelService_serviceDesc, srv)
}

func _TimerWheelService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimerWheelServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TimerWheelService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimerWheelServiceServer).Send(ctx, req.(*AddTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimerWheelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.TimerWheelService",
	HandlerType: (*TimerWheelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _TimerWheelService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "timerwheel_rpc.proto",
}
